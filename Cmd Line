3. Commandline fun

Environment Variables - global storage for settings
$PATH - list of directory paths
$USER - username 
$PWD - present directory
$HOME - shows home directory
echo $PATH

If we want to save a variable
export - assign a variable globally to save time

ex. export b=10.11.1.111
nmap b$
"starting nmap 10.11.1.111"

export c=10.11.1.112
echo c$ = 10.11.1.112
env - shows environment variables

history - shows recent commands
 !32 - selects line 32
 !! - runs most recent command
 ctrl + r - searches commands by first letter
 
 $HISTSIZE - 
 $HISTFILESIZE - controls how many commands
 
 Redirection and piping
 stdin - input
 stdout - output (that normally goes to the terminal)
 stderr - error messages (that normally go to the cloud)
 
 > - redirecting output
 - creates a file if its not found
 - overwrites a file if it is found
 >> - append output to file
 wc -m < test.txt
 0 - stdin
 1 - stdout
 2 - stderr
 ls ./test 2>error.txt
 
 cat error.txt | wc -m > count.txt
 
 Text Searching and Manipulation
 
 grep - searaches for any lines containing the text
 ls -la /usr/bin | grep zip
 
 sed - stream editor
 echo "I need to try hard" | sed 's/hard/harder/'
 
 cut - extract a section of text to output to standard output
 echo "I hack binaries,web apps,mobile apps, and just about anything
else"| cut -f 2 -d ","

awk - extraction and reporting tool
echo "hello::there::friend" | awk -F "::" '{print $1, $3}'

head - shows the 1st 10 lines

wc - word count , -l line count

Practical example:
Use head and wc -l to get a grasp of whats in the log file
head access.log
wc -l access.log

Use Cut and sort to pull out all the IP's
cat access.log | cut -d " " -f 1 | sort -u

Use Cut, sort, uniq, and sort again to arrange by amount of occurrences - to find the outlier
cat access.log | cut -d " " -f 1 | sort | uniq -c | sort -urn

Use grep to single out the IP, then cut to grab the http request in this case
cat access.log | grep '208.68.234.99' | cut -d "\"" -f 2 | uniq -c

Use grep twice and uniq to see if they got any different results and sort them
cat access.log | grep '208.68.234.99' | grep '/admin ' | sort -u

Use reverse grep to see if they were doing anything else
cat access.log|grep '208.68.234.99'| grep -v '/admin '
editing filels
nano
vi
use dd to delete the current line, yy to copy the current line, p to paste the clipboard
contents, x to delete the current character, :w to write the current file to disk and stay in vi, :q! to
quit without writing the file to disk, and finally :wq to save and quit.

comparing files
comm
comm file1 file2 -1 suppresses column 1
diff
diff -c a.txt b.txt
diff -u
vimdiff
vimdiff 1.txt 2.txt
d+p d+o

Managin processes
& - background a process as soon as your run it
ctrl+z - suspend command
bg- resume process in the background
- beware that returning output from a command might not be received by a suspended process
jobs - pulls up the list of jobs running in the background
fg %1 - foregrounds process 1 if multiple exist
ps - process state
e : select all processes
â€¢ f : display full format listing (UID, PID, PPID, etc.)
1st THING TO DO ON A COMPROMISED MACHINE
Kill - kills a process according to the process number
File and Command monitoring
tail - monitor logs actively while they are being written
watch - run a designated command every X number of seconds

Downloading files
wget - downloads files using http and ftp
-o allows yuo to rename the file on hte other machi9ne
curl - download or upload files
- 
axel transers through multiple connections
axel -a -n 20 -o 
-o to name the file
-a to get precise progress
-n to choose the number of connections

Customizing the bash environment 
Bash history custom
export HISTCONTROL=ignoredups
export HISTIGNORE='ls:&
export HISDTTIMEFORMAT='%F %T'
man strftime to learn more about this one specifically

Alias - string that can replace other commands
alias lsa='ls-la'
alias alone will show defined arguments 

Persistent 

/etc/bash.bashrc'
edit the bashrc file to change the environmetn variables in their bashrch to change thatpersojns system.


